source('C:/Shahar/Projects/Optimization/productionR/session1.R')
df<-list()
loadModelInput(df,"Aol_0")
df <- loadModelInput(df,"Aol_0")
View(df)
class(df)
class(df[[1]])
names(df[[1]])
ggplot(df$Aol_0)+geom_point(aes(x=FloorPrice,y=fill))
ggplot(df$Aol_0)+geom_point(aes(x=FloorPrice,y=Fill))
ggplot(df$Aol_0)+geom_line(aes(x=as.Date(date,format="dd/mm/yyyy"),y=Fill,colour=as.factor(FloorPrice),group=as.Factor(FloorPrice)))
ggplot(df$Aol_0)+geom_line(aes(x=as.Date(date,format="dd/mm/yyyy"),y=Fill,colour=as.factor(FloorPrice),group=as.factor(FloorPrice)))
ggplot(df$Aol_0 %>% mutate(FloorPrice = as.factor(FloorPrice),date=as.Date(date,format="dd/mm/yyyy"))+geom_line(aes(x=date,y=Fill,colour=FloorPrice,group=FloorPrice))
)
ggplot(df$Aol_0 %>% mutate(FloorPrice = as.factor(FloorPrice),date=as.Date(date,format="dd/mm/yyyy")))+geom_line(aes(x=date,y=Fill,colour=FloorPrice,group=FloorPrice))
ggplot(df$Aol_0 %>% mutate(FloorPrice = as.factor(FloorPrice),date=as.Date(date,format="dd/mm/yyyy")) %>% arrange(FloorPrice,date))+geom_line(aes(x=date,y=Fill,colour=FloorPrice,group=FloorPrice))
ggplot(df$Aol_0 %>% mutate(FloorPrice = as.factor(FloorPrice),date=as.Date(date,format="dd/mm/yyyy")) %>% arrange(FloorPrice,date))+geom_path(aes(x=date,y=Fill,colour=FloorPrice,group=FloorPrice))
class(df$Aol_0$date)
df$Aol_0$date %>% as.Date(format="dd/mm/yyyy")
df$Aol_0$date %>% as.Date(format="d/m/yy")
df$Aol_0$date %>% as.Date(format="d/m/yyyyy")
df$Aol_0$date %>% as.Date(format="D/M/yyyyy")
df$Aol_0$date %>% as.character %>% as.Date(format="D/M/yyyyy")
df$Aol_0$date %>% as.character() %>% as.Date(format="D/M/yyyyy")
df$Aol_0$date %>% as.character() %>% as.Date(format="dd/mm/yyyyy")
? as.Date
df$Aol_0$date %>% as.character() %>% as.Date(format="%d/%m/%y")
df$Aol_0$date %>% as.Date(format="%d/%m/%y")
df$Aol_0$date %>% as.Date(format="%d/%m/%Y")
ggplot(df$Aol_0 %>% mutate(FloorPrice = as.factor(FloorPrice),date=as.Date(date,format="%d/%m/%Y")) %>% arrange(FloorPrice,date))+geom_path(aes(x=date,y=Fill,colour=FloorPrice,group=FloorPrice))
df <- loadModelInput(df, "Aol_1")
ggplot(df$Aol_1 %>% mutate(FloorPrice = as.factor(FloorPrice),date=as.Date(date,format="%d/%m/%Y")) %>% arrange(FloorPrice,date))+geom_path(aes(x=date,y=Fill,colour=FloorPrice,group=FloorPrice))
ggplot(df$Aol_1)+geom_point(aes(x=FloorPrice,y=Fill))
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
install.packages("stringr")
str_extract("aaa12xxx", "([a-z]+)[0-9]+[a-z]+")
library(stringr)
str_extract("aaa12xxx", "([a-z]+)[0-9]+[a-z]+")
str_extract("aaa12xxx", "^([a-z]+)[0-9]+[a-z]+$")
str_extract("aaa12xxx", "^([a-z]+)$")
str_extract("aaa12xxx", "^([a-z]+)")
str_extract("aaa12xxx", "([a-z]+)$")
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
loadAllInputs()
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
loadAllInputs()
View(df1)
View(df)
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
?match
names(df)
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
df <- loadAllInputs()
names(df)
df[10,]
df[10,c("Ecpm","date")]
names(df[10,c("Ecpm","date")])
?stringr
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
str_replace_all(fruits, "aeiou", "-")
str_replace_all("[a:b:c:d]", "[\]\[]", "-")
str_replace_all("[a:b:c:d]", "[\\]\[]", "-")
str_replace_all("[a:b:c:d]", "[\\]\\[]", "-")
left("abadgs",1)
substr("abadgs",1,1)
substr("abadgs",2,1000)
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
names(df)
phiBasedFillPrediction(df,"date")
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
warnings()
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
i
keys
df[1,"date"]
case
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
chainCode
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
case
phiBasedFillPrediction(df,"date")
data.frame(network=myNetwork, FloorPrice = myFloorPrice)
prevTagCase
case
a=list()
a[[c("t","tt")]]=c(2,4)
a[[c("t","tt")]]=2
a[["t"]]=2
a[c("t","tt"]=2
a[c("t","tt")]=2
a
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
df["date"][1]
df["date"]
df["date"][,1]
df["date"][1,]
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
case
names(case)
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
case
prevTagCase
case
prevTagList
cbind(case,prevTagCase)
cbind(case,prevTagList)
?cbind
cbind(case,prevTagList,deparse.level = 0)
cbind(case,prevTagList,deparse.level = 1)
cbind(case,prevTagList,deparse.level = 2)
cbind(case,prevTagList,deparse.level = 3)
cbind(as.matrix(case),as.matrix(prevTagList),deparse.level = 3)
cbind(as.matrix(case),as.matrix(prevTagList),deparse.level = 1)
cbind(as.matrix(case),as.matrix(prevTagList),deparse.level = 0)
cbind(as.matrix(case),as.matrix(prevTagList),deparse.level = 1)
cbind(as.matrix(case),as.matrix(prevTagList),deparse.level = 2)
cbind(prevTagList,case)
case
case$numb=""
case
cbind(case,prevTagList)
?inner_join
full_join(case,prevTagList)
case <- df[i,keys]
class(case)
class(df[i,][[keys]])
class(df[keys][i])
class(df[keys][i,])
class(as.data.frame(df[keys][i,]))
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
case
class(case)
case
prevTagCase
View(df)
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
retrieve.generic(df, prevTagCase)
case[[i]]
sum(cond)
cond
sum(cond, na.rm=T)
case[[3]]
sum(df[[FloorPrice]]=="0.80")
sum(df[["FloorPrice"]]=="0.80")
sum(as.character(df[["FloorPrice"]])=="0.80")
df[["FloorPrice"]]
"0.80"=="0.80"
"0.80" %in% df[["FloorPrice"]]
0.80 %in% df[["FloorPrice"]]
0.80 %in% as.character(df[["FloorPrice"]])
"0.80" %in% as.character(df[["FloorPrice"]])
as.character(0.80) %in% as.character(df[["FloorPrice"]])
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
sum(cond,na.rm=TRUE)
sum(df[[cols[i]]]==case[[i]] | as.character(df[[cols[i]]])==as.character(case[[i]]))
case[[i]]
cols[[i]]
sum(df[["FloorPrice"]]==0.80)
sum(df[["FloorPrice"]]=="0.80")
names(df)
class(df$Fill)
class(df$FloorPrice)
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
prevTagCase
prevTagCase$FloorPrice %>% class()
prevTagRow
prevTagRow %>% View()
chain=a:n:d:54:3
chain="a:n:d:54:3"
word(chain(1,-1))
word(chain,1,-1)
word(chain,1,-2)
word(chain,1,4)
word(chain,1,-1,":")
word(chain,1,-2,":")
chain="[a:n:d:54:3]"
word(chain,1,-2,":")
word(chain,1,-2,":")+"]"
c(word(chain,1,-2,":"), "]")
paste0(word(chain,1,-2,":"), "]")
source('C:/Shahar/Projects/Optimization/productionR/session1.R')
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
chain
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
phiBasedFillPrediction(df,"date")
chain
prevTagList
prevTagPfx
debugSource('C:/Shahar/Projects/Optimization/productionR/session1.R')
